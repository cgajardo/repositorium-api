[repoIndex]
method = GET
path = "/repositories"
class = Repositories
function = index

[reposhow]
method = GET
path = "/repositories/(\d+)"
class = Repositories
function = show

[show repo stats]
method = GET
path = "/repositories/(\d+)/stats"
class = Repositories
function = showStats

[show users on a repository]
method = GET
path = "/repositories/(\d+)/users"
class = Repositories
function = showUsers

[search documents in a repository]
method = GET
path = "/repositories/(\d+)/search:([^/]+)"
class = Repositories
function = search

[get a document from repository]
method = GET
path = "/repositories/(\d+)/documents"
class = Documents
function = get

[get tags from repository]
method = GET
path = "/repositories/(\d+)/tags"
class = Repositories
function = showTags

[get a random document fro repository]
method = GET
path = "/repositories/(\d+)/documents/random"
class = Documents
function = getRandom

[get a random challenge from repository]
method = GET
path = "/repositories/(\d+)/challenges"
class = Challenges
function = get

[join to repository]
method = POST
path = "/repositories/(\d+)/join"
class = Repositories
function = join

[disjoin to repository]
method = POST
path = "/repositories/(\d+)/disjoin"
class = Repositories
function = disjoin

[add a document]
method = POST
path = "/repositories/(\d+)/documents"
class = Documents
function = add

[submit a challenge]
method = POST
path = "/repositories/(\d+)/challenge"
class = Challenges
function = submit

[updates a document data]
method = PUT
path = "/repositories/(\d+)/documents"
class = Documents
function = update

[delete a document]
method = DELETE
path = "/repositories/(\d+)/documents"
class = Documents
function = delete

[try to delete all repository]
method = DELETE
path = "/repositories"
class = Errors
function = forbidden

[try to delete a repository]
method = DELETE
path = "/repositories/(\d+)"
class = Errors
function = forbidden

[try to delete a user]
method = DELETE
path = "/repositories/(\d+)/users"
class = Errors
function = forbidden

[add a new user]
method = POST
path = "/users"
class = Users
function = add

[autentificate a user]
method = POST
path = "/users/login"
class = Users
function = login

[load user data]
method = GET
path = "/users/([^/]+)"
class = Users
function = load

[list repositories where user participate]
method = GET
path = "/users/([^/]+)/repositories"
class = Users
function = loadRepositories

[update user data]
method = PUT
path = "/users/([^/]+)"
class = Users
function = update

[try to delete a user]
method = DELETE
path = "/users"
class = Errors
function = forbidden

[try to remove a user from a repository]
method = DELETE
path = "/users/([^/]+)/repositories"
class = Errors
function = forbidden
